#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
spring:
  main:
    allow-circular-references: true ${symbol_pound} 允许循环依赖，因为项目是三层架构，无法避免这个情况。
    allow-bean-definition-overriding: true ${symbol_pound} 允许 Bean 覆盖，例如说 Dubbo 或者 Feign 等会存在重复定义的服务

  ${symbol_pound} Servlet 配置
  servlet:
    ${symbol_pound} 文件上传相关配置项
    multipart:
      max-file-size: 16MB ${symbol_pound} 单个文件大小
      max-request-size: 32MB ${symbol_pound} 设置总上传的文件大小
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER ${symbol_pound} 解决 SpringFox 与 SpringBoot 2.6.x 不兼容的问题，参见 SpringFoxHandlerProviderBeanPostProcessor 类

  ${symbol_pound} Jackson 配置项
  jackson:
    serialization:
      write-dates-as-timestamps: true ${symbol_pound} 设置 Date 的格式，使用时间戳
      write-date-timestamps-as-nanoseconds: false ${symbol_pound} 设置不使用 nanoseconds 的格式。例如说 1611460870.401，而是直接 1611460870401
      write-durations-as-timestamps: true ${symbol_pound} 设置 Duration 的格式，使用时间戳
      fail-on-empty-beans: false ${symbol_pound} 允许序列化无属性的 Bean

  ${symbol_pound} Cache 配置项
  cache:
    type: REDIS
    redis:
      time-to-live: 1h ${symbol_pound} 设置过期时间为 1 小时

${symbol_pound} MyBatis Plus 的配置项
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true ${symbol_pound} 虽然默认为 true ，但是还是显示去指定下。
    ${symbol_pound}log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: NONE ${symbol_pound} “智能”模式，基于 IdTypeEnvironmentPostProcessor + 数据源的类型，自动适配成 AUTO、INPUT 模式。
${symbol_pound}      id-type: AUTO ${symbol_pound} 自增 ID，适合 MySQL 等直接自增的数据库
${symbol_pound}      id-type: INPUT ${symbol_pound} 用户输入 ID，适合 Oracle、PostgreSQL、Kingbase、DB2、H2 数据库
${symbol_pound}      id-type: ASSIGN_ID ${symbol_pound} 分配 ID，默认使用雪花算法。注意，Oracle、PostgreSQL、Kingbase、DB2、H2 数据库时，需要去除实体类上的 @KeySequence 注解
      logic-delete-value: 1 ${symbol_pound} 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 ${symbol_pound} 逻辑未删除值(默认为 0)
  type-aliases-package: ${symbol_dollar}{saltyfish.info.base-package}.domain

--- ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} RPC 远程调用相关配置 ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}
dubbo:
  scan:
    base-packages: ${symbol_dollar}{saltyfish.info.base-package}.api ${symbol_pound} 指定 Dubbo 服务实现类的扫描基准包
  protocol:
    name: dubbo ${symbol_pound} 协议名称
    port: -1 ${symbol_pound} 协议端口，-1 表示自增端口，从 20880 开始
  registry:
    address: spring-cloud://localhost ${symbol_pound} 设置使用 Spring Cloud 注册中心
  application:
    id: infra-server

${symbol_pound} feign调用超时时间配置
feign:
  okhttp:
    enabled: true
  sentinel:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 600000
--- ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} MQ 消息队列相关配置 ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

spring:
  cloud:
    ${symbol_pound} Spring Cloud Stream 配置项，对应 BindingServiceProperties 类
    stream:
      ${symbol_pound}      function:
      ${symbol_pound}        definition: roleRefreshConsumer;roleMenuRefreshConsumer;userRoleRefreshConsumer;
      ${symbol_pound} Binding 配置项，对应 BindingProperties Map
      bindings:
        roleRefresh-out-0:
          destination: system_role_refresh
        roleRefreshConsumer-in-0:
          destination: system_role_refresh
          group: system_role_refresh_consumer_group
      ${symbol_pound} Spring Cloud Stream RocketMQ 配置项
      rocketmq:
        ${symbol_pound} RocketMQ Binder 配置项，对应 RocketMQBinderConfigurationProperties 类
        binder:
          name-server: 127.0.0.1:9876 ${symbol_pound} RocketMQ Namesrv 地址
        default: ${symbol_pound} 默认 bindings 全局配置
          producer: ${symbol_pound} RocketMQ Producer 配置项，对应 RocketMQProducerProperties 类
            group: infra_producer_group ${symbol_pound} 生产者分组
            send-type: SYNC ${symbol_pound} 发送模式，SYNC 同步

    ${symbol_pound} Spring Cloud Bus 配置项，对应 BusProperties 类
    bus:
      enabled: true ${symbol_pound} 是否开启，默认为 true
      id: ${symbol_dollar}{spring.application.name}:${symbol_dollar}{server.port} ${symbol_pound} 编号，Spring Cloud Alibaba 建议使用“应用:端口”的格式
      destination: springCloudBus ${symbol_pound} 目标消息队列，默认为 springCloudBus

--- ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} 定时任务相关配置 ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

xxl:
  job:
    executor:
      appname: ${symbol_dollar}{spring.application.name} ${symbol_pound} 执行器 AppName
      logpath: ${symbol_dollar}{user.home}/logs/xxl-job/${symbol_dollar}{spring.application.name} ${symbol_pound} 执行器运行日志文件存储磁盘路径
    accessToken: default_token ${symbol_pound} 执行器通讯TOKEN

--- ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound} 相关配置 ${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}${symbol_pound}

saltyfish:
  info:
    version: ${version}
    base-package: ${package}
  web:
    admin-ui:
      url: http://dashboard.yudao.iocoder.cn ${symbol_pound} Admin 管理后台 UI 的地址
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: ${symbol_dollar}{saltyfish.info.version}
    base-package: ${symbol_dollar}{saltyfish.info.base-package}
  codegen:
    base-package: ${symbol_dollar}{saltyfish.info.base-package}
    db-schemas: ${symbol_dollar}{spring.datasource.dynamic.datasource.master.name}
  error-code: ${symbol_pound} 错误码相关配置项
    constants-class-list:
      - ${package}.app.enums.ErrorCodeEnum
  tenant: ${symbol_pound} 多租户相关配置项
    enable: true
    ignore-urls:
      - /remote-api/infra/file/*/get/** ${symbol_pound} 获取图片，和租户无关
    ignore-tables:
      - infra_codegen_column
      - infra_codegen_table
      - infra_test_demo
      - infra_config
      - infra_file_config
      - infra_file
      - infra_file_content
      - infra_job
      - infra_job_log
      - infra_job_log
      - infra_data_source_config

debug: false
